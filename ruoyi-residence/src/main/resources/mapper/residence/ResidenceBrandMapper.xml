<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.residence.mapper.ResidenceBrandMapper">
    
    <resultMap type="ResidenceBrand" id="ResidenceBrandResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="picUrl"    column="pic_url"    />
        <result property="description"    column="description"    />
        <result property="sort"    column="sort"    />
        <result property="status"    column="status"    />
        <result property="display"    column="display"    />
        <result property="deleted"    column="deleted"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <resultMap id="ResidenceBrandResidenceBrandPictureResult" type="ResidenceBrand" extends="ResidenceBrandResult">
        <collection property="residenceBrandPictureList" notNullColumn="sub_id" javaType="java.util.List" resultMap="ResidenceBrandPictureResult" />
    </resultMap>

    <resultMap type="ResidenceBrandPicture" id="ResidenceBrandPictureResult">
        <result property="id"    column="sub_id"    />
        <result property="residenceBrandId"    column="sub_residence_brand_id"    />
        <result property="picUrl"    column="sub_pic_url"    />
        <result property="sort"    column="sub_sort"    />
    </resultMap>

    <sql id="selectResidenceBrandVo">
        select id, name, pic_url, description, sort, status, display, deleted, create_time from residence_brand
    </sql>

    <select id="selectResidenceBrandList" parameterType="ResidenceBrand" resultMap="ResidenceBrandResult">
        <include refid="selectResidenceBrandVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="description != null  and description != ''"> and description like concat('%', #{description}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="display != null "> and display = #{display}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
        </where>
    </select>
    
    <select id="selectResidenceBrandById" parameterType="Long" resultMap="ResidenceBrandResidenceBrandPictureResult">
        select a.id, a.name, a.pic_url, a.description, a.sort, a.status, a.display, a.deleted, a.create_time,
 b.id as sub_id, b.residence_brand_id as sub_residence_brand_id, b.pic_url as sub_pic_url, b.sort as sub_sort
        from residence_brand a
        left join residence_brand_picture b on b.residence_brand_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertResidenceBrand" parameterType="ResidenceBrand" useGeneratedKeys="true" keyProperty="id">
        insert into residence_brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="picUrl != null">pic_url,</if>
            <if test="description != null">description,</if>
            <if test="sort != null">sort,</if>
            <if test="status != null">status,</if>
            <if test="display != null">display,</if>
            <if test="deleted != null">deleted,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="picUrl != null">#{picUrl},</if>
            <if test="description != null">#{description},</if>
            <if test="sort != null">#{sort},</if>
            <if test="status != null">#{status},</if>
            <if test="display != null">#{display},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateResidenceBrand" parameterType="ResidenceBrand">
        update residence_brand
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="picUrl != null">pic_url = #{picUrl},</if>
            <if test="description != null">description = #{description},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="status != null">status = #{status},</if>
            <if test="display != null">display = #{display},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteResidenceBrandById" parameterType="Long">
        delete from residence_brand where id = #{id}
    </delete>

    <delete id="deleteResidenceBrandByIds" parameterType="String">
        delete from residence_brand where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteResidenceBrandPictureByResidenceBrandIds" parameterType="String">
        delete from residence_brand_picture where residence_brand_id in 
        <foreach item="residenceBrandId" collection="array" open="(" separator="," close=")">
            #{residenceBrandId}
        </foreach>
    </delete>

    <delete id="deleteResidenceBrandPictureByResidenceBrandId" parameterType="Long">
        delete from residence_brand_picture where residence_brand_id = #{residenceBrandId}
    </delete>

    <insert id="batchResidenceBrandPicture">
        insert into residence_brand_picture( id, residence_brand_id, pic_url, sort) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.residenceBrandId}, #{item.picUrl}, #{item.sort})
        </foreach>
    </insert>
</mapper>