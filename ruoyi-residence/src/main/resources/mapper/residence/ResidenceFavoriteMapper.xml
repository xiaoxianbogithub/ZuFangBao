<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.residence.mapper.ResidenceFavoriteMapper">
    
    <resultMap type="ResidenceFavorite" id="ResidenceFavoriteResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="residenceId"    column="residence_id"    />
        <result property="sort"    column="sort"    />
        <result property="createTime"    column="create_time"    />
        <association property="residenceInfo"  javaType="ResidenceInfoListVO" resultMap="ResidenceInfoListVOResult" />
    </resultMap>

    <resultMap id="ResidenceInfoListVOResult" type="ResidenceInfoListVO">
        <result property="residenceId" column="res_id"  />
        <result property="name" column="res_name"  />
        <result property="labels"    column="res_labels"    />
        <result property="price"    column="res_price"    />
        <result property="towards"    column="res_towards"    />
        <result property="geoCoordinate" column="res_geo_coordinate" />
        <result property="browseCount"    column="res_browse_count"    />
        <result property="status"    column="res_status"    />
    </resultMap>

    <sql id="selectResidenceFavoriteSQL">
        select rf.id, rf.user_id, rf.residence_id, rf.sort, rf.create_time,
               ri.id res_id, ri.`name` res_name, ri.labels res_labels, ri.price res_price, ri.towards res_towards, ri.geo_coordinate res_geo_coordinate, ri.browse_count res_browse_count, ri.`status` res_status
        from residence_favorite rf
        left join residence_info ri on rf.residence_id = ri.id

    </sql>

    <select id="selectResidenceFavoriteList" parameterType="ResidenceFavorite" resultMap="ResidenceFavoriteResult">
        <include refid="selectResidenceFavoriteSQL"/>
        <where>
            <if test="userId != null"> and user_id = #{userId} </if>
        </where>
        <choose>
            <when test="params.sortSql != null">
                order by ${params.sortSql}
            </when>
            <otherwise>
                order by rf.create_time desc
            </otherwise>
        </choose>
    </select>
        
    <insert id="insertResidenceFavorite" parameterType="ResidenceFavorite" useGeneratedKeys="true" keyProperty="id">
        insert into residence_favorite
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="residenceId != null">residence_id,</if>
            <if test="sort != null">sort,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="residenceId != null">#{residenceId},</if>
            <if test="sort != null">#{sort},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <delete id="deleteResidenceFavoriteById" parameterType="Long">
        delete from residence_favorite where id = #{id}
    </delete>

    <delete id="deleteResidenceFavoriteByIds" parameterType="String">
        delete from residence_favorite where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>